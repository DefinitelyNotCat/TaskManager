CREATE OR REPLACE TRIGGER open_pdbs
  AFTER STARTUP ON DATABASE
BEGIN
   EXECUTE IMMEDIATE 'ALTER PLUGGABLE DATABASE ALL OPEN';
END open_pdbs;
/

COMMIT;

CREATE TABLE URGENCY (
  UR_ID   NUMBER(1, 0) GENERATED BY DEFAULT AS IDENTITY,
  UR_NAME VARCHAR2(60) NOT NULL,
  CONSTRAINT URGENCY_PK PRIMARY KEY (UR_ID)
);

CREATE TABLE USER_ACCESS (
  UA_ID   NUMBER(2, 0) GENERATED BY DEFAULT AS IDENTITY,
  UA_NAME VARCHAR2(60) NOT NULL,
  CONSTRAINT USER_ACCESS_PK PRIMARY KEY (UA_ID)
);

CREATE TABLE DEPARTMENT (
  DP_ID   NUMBER(2, 0)  GENERATED BY DEFAULT AS IDENTITY,
  DP_NAME VARCHAR2(150) NOT NULL,
  CONSTRAINT DEPARTMENT_PK PRIMARY KEY (DP_ID)
);

CREATE TABLE STATUS (
  ST_ID   NUMBER(1, 0) GENERATED BY DEFAULT AS IDENTITY,
  ST_NAME VARCHAR2(60) NOT NULL,
  CONSTRAINT STATUS_PK PRIMARY KEY (ST_ID)
);

CREATE TABLE EMPLOYEE (
  EME_ID                 NUMBER        GENERATED BY DEFAULT AS IDENTITY,
  EME_FULL_NAME          VARCHAR2(100) NOT NULL,
  EME_IS_ACTIVE          VARCHAR2(1)   DEFAULT 'Y' NOT NULL,
  EME_EMAIL              VARCHAR2(120) NOT NULL,
  EME_EMAIL_NOTIFICATION VARCHAR2(1)   DEFAULT 'N' NOT NULL,
  EME_ACCESS_STATUS      NUMBER(2, 0)  NOT NULL,
  EME_LOGIN              VARCHAR2(20)  NOT NULL,
  EME_PASSWORD           VARCHAR2(800) NOT NULL,
  EME_DEPARTMENT         NUMBER(2, 0)  NOT NULL,
  CONSTRAINT EMPLOYEE_PK PRIMARY KEY (EME_ID),
  CONSTRAINT EME_ACCESS_FK FOREIGN KEY (EME_ACCESS_STATUS) REFERENCES USER_ACCESS (UA_ID),
  CONSTRAINT EME_DEPARTMENT_FK FOREIGN KEY (EME_DEPARTMENT) REFERENCES DEPARTMENT (DP_ID),
  CONSTRAINT EMPLOYEE_UNIQUE UNIQUE (EME_EMAIL, EME_LOGIN)
);

CREATE TABLE TASK (
  TK_ID               NUMBER        GENERATED BY DEFAULT AS IDENTITY,
  TK_NAME             VARCHAR2(150) NOT NULL,
  TK_STATUS           NUMBER(1, 0)  DEFAULT 4 NOT NULL,
  TK_DATE_OF_CREATION DATE          NOT NULL,
  TK_LAST_ANSWER      DATE          NOT NULL,
  TK_DEADLINE         DATE,
  TK_URGENCY          NUMBER(1, 0)  NOT NULL,
  TK_CLOSED           VARCHAR2(1)   NOT NULL,
  TK_PROPONENT        NUMBER(5, 0)  NOT NULL,
  TK_PR_DEP           NUMBER(2, 0)  NOT NULL,
  TK_RESPONSIBLE      NUMBER(5, 0),
  TK_RES_DEP          NUMBER(2, 0)  NOT NULL,
  CONSTRAINT TASK_PK PRIMARY KEY (TK_ID),
  CONSTRAINT TK_PROPONENT_DEPARTMENT_FK FOREIGN KEY (TK_PR_DEP) REFERENCES TTS.DEPARTMENT (DP_ID),
  CONSTRAINT TK_PROPONENT_FK FOREIGN KEY (TK_PROPONENT) REFERENCES TTS.EMPLOYEE (EME_ID),
  CONSTRAINT TK_RESPONSIBLE_DEPARTMENT_FK FOREIGN KEY (TK_RES_DEP) REFERENCES TTS.DEPARTMENT (DP_ID),
  CONSTRAINT TK_RESPONSIBLE_FK FOREIGN KEY (TK_RESPONSIBLE) REFERENCES TTS.EMPLOYEE (EME_ID),
  CONSTRAINT TK_STATUS_FK FOREIGN KEY (TK_STATUS) REFERENCES TTS.STATUS (ST_ID),
  CONSTRAINT TK_URGENCY_FK FOREIGN KEY (TK_URGENCY) REFERENCES TTS.URGENCY (UR_ID)
);

CREATE TABLE TASK_MESSAGES (
  TM_ID      NUMBER          GENERATED BY DEFAULT AS IDENTITY,
  TM_TK_ID   NUMBER          NOT NULL,
  TM_EME_ID  NUMBER(5, 0)    NOT NULL,
  TM_MESSAGE VARCHAR2(2000),
  TM_ACTION  VARCHAR2(600),
  TM_DATE    DATE            NOT NULL,
  CONSTRAINT TASK_MESSAGES_PK PRIMARY KEY (TM_ID),
  CONSTRAINT TM_EMPLOYEE_FK FOREIGN KEY (TM_EME_ID) REFERENCES EMPLOYEE (EME_ID),
  CONSTRAINT TM_TASK_FK FOREIGN KEY (TM_TK_ID) REFERENCES TASK (TK_ID)
);

CREATE TABLE FAVORITES (
   F_EME_ID NUMBER NOT NULL,
   F_TK_ID  NUMBER NOT NULL,
   CONSTRAINT F_EMPLOYEE_FK FOREIGN KEY (F_TK_ID) REFERENCES TASK (TK_ID),
   CONSTRAINT F_TASK_FK FOREIGN KEY (F_EME_ID) REFERENCES EMPLOYEE (EME_ID)
);

CREATE TABLE FILES (
  F_ID    NUMBER        GENERATED BY DEFAULT AS IDENTITY,
  F_NAME  VARCHAR2(120) NOT NULL,
  F_DATA  BLOB          NOT NULL,
  F_TM_ID NUMBER        NOT NULL,
  F_TYPE  VARCHAR2(300) NOT NULL,
  CONSTRAINT FILES_PK PRIMARY KEY (F_ID),
  CONSTRAINT F_TASK_MESSAGES_FK FOREIGN KEY (F_TM_ID) REFERENCES TASK_MESSAGES (TM_ID)
);

CREATE TABLE TASK_VIEW_LOG (
  TVL_ID     NUMBER       GENERATED BY DEFAULT AS IDENTITY,
  TVL_TK_ID  NUMBER       NOT NULL,
  TVL_EME_ID NUMBER(5, 0) NOT NULL,
  TVL_DATE   DATE         NOT NULL,
  CONSTRAINT TVL_PK PRIMARY KEY (TVL_ID),
  CONSTRAINT TVL_EMPLOYEE_FK FOREIGN KEY (TVL_EME_ID) REFERENCES EMPLOYEE (EME_ID),
  CONSTRAINT TVL_TASK_FK FOREIGN KEY (TVL_TK_ID) REFERENCES TASK (TK_ID)
);


INSERT INTO STATUS(ST_NAME) VALUES ('В ожидании ответа');
INSERT INTO STATUS(ST_NAME) VALUES ('В работе');
INSERT INTO STATUS(ST_NAME) VALUES ('Выполнено');
INSERT INTO STATUS(ST_NAME) VALUES ('На распределении');
INSERT INTO STATUS(ST_NAME) VALUES ('Уточняется');

INSERT INTO DEPARTMENT(DP_NAME) VALUES ('Отдел расчетов');
INSERT INTO DEPARTMENT(DP_NAME) VALUES ('Отдел качества обслуживания');
INSERT INTO DEPARTMENT(DP_NAME) VALUES ('Отдел разработки');
INSERT INTO DEPARTMENT(DP_NAME) VALUES ('Администратор');


INSERT INTO URGENCY(UR_NAME) VALUES ('Стандартный');
INSERT INTO URGENCY(UR_NAME) VALUES ('Срочный');
INSERT INTO URGENCY(UR_NAME) VALUES ('Приоритетный');

INSERT INTO USER_ACCESS(UA_NAME) VALUES ('Стажеры');
INSERT INTO USER_ACCESS(UA_NAME) VALUES ('Исполнители');
INSERT INTO USER_ACCESS(UA_NAME) VALUES ('Руководство');
